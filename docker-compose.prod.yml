# version: '3.8'

services:
  frontend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: luna-game-frontend
    networks:
      networks:
        saga4v_network
    ports:
      - "5173:5173"
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=5173
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

<<<<<<< HEAD
  # nginx:
    # image: nginx:latest
    # container_name: luna-game-nginx
    # networks:
      # - app_network
    # ports:
      # - "80:80"
      # - "443:443"
    # volumes:
      # - ./conf.d/play.conf:/etc/nginx/conf.d/play.conf:ro
      # - /etc/nginx/ssl/play.saga4v.com/fullchain.pem:/etc/nginx/ssl/fullchain.pem:ro
      # - /etc/nginx/ssl/play.saga4v.com/privkey.pem:/etc/nginx/ssl/privkey.pem:ro
    # depends_on:
      # frontend:
        # condition: service_healthy
    # restart: unless-stopped
=======
  nginx:
    image: nginx:latest
    container_name: luna-game-nginx
    networks:
      - app_network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./conf.d/play.conf:/etc/nginx/conf.d/play.conf:ro
      - /etc/nginx/ssl/play.saga4v.com/fullchain.pem:/etc/nginx/ssl/fullchain.pem:ro
      - /etc/nginx/ssl/play.saga4v.com/privkey.pem:/etc/nginx/ssl/privkey.pem:ro
    depends_on:
      frontend:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      replicas: ${NGINX_REPLICAS:-0}  # 默认不启动 Nginx
>>>>>>> 2b078f9af79d9000aaf24ac2cf6c68c42587c9f6

networks:
  saga4v_network: 
    external: true  # Use the same external network as Nginx. Important: tells Docker this network is created externally.
    # driver: bridge