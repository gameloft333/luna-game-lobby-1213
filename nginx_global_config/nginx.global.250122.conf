# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
# include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # SSL Global Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
    ssl_ecdh_curve secp384r1;
    ssl_session_timeout  10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    # include /etc/nginx/conf.d/*.conf;

    # server {
    #    listen       80;
    #    listen       [::]:80;
    #    server_name  _;
    #    root         /usr/share/nginx/html;

    #    # Load configuration files for the default server block.
    #    include /etc/nginx/default.d/*.conf;


    #    error_page 404 /404.html;
    #    location = /404.html {
    #    }

    #    error_page 500 502 503 504 /50x.html;
    #    location = /50x.html {
    #    }
    # }
	
	# 默认服务器块 - 处理未知域名的请求
	server {
		listen 80 default_server;
		listen [::]:80 default_server;
		server_name _;
		return 444;  # 关闭未知域名的连接
	}

    # play_lobby 服务器配置
	server {
		listen 80;
        listen 443 ssl http2;  # Correct HTTP2 directive, Combine ssl and http2 in one directive
		server_name play.saga4v.com;
    
		access_log /var/log/nginx/play.access.log;
		error_log /var/log/nginx/play.error.log debug;

		# SSL 配置
		ssl_certificate /etc/nginx/ssl/play.saga4v.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/play.saga4v.com/privkey.pem;
		ssl_ciphers HIGH:!aNULL:!MD5;

		# HTTP 重定向到 HTTPS
		if ($scheme != "https") {
			return 301 https://$host$request_uri;
		}
        
        location / {
			proxy_pass http://luna-game-frontend:5173;
			proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        
			# 添加调试头
			add_header X-Debug-Message "Proxying to 5173" always;
		}
	}
	
	# love 服务器配置
	server {
		# listen 80;
		listen 443 ssl http2;  # Correct HTTP2 directive, Combine ssl and http2 in one directive
        server_name love.saga4v.com;

		# SSL 配置
        ssl_certificate /etc/nginx/ssl/love.saga4v.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/love.saga4v.com/privkey.pem;

		# ssl_ciphers HIGH:!aNULL:!MD5;

		# HTTP 重定向到 HTTPS
		if ($scheme != "https") {
			return 301 https://$host$request_uri;
		}

		location / {
			# proxy_pass http://frontend:4173;
			# proxy_pass http://127.0.0.1:4173;
            proxy_pass http://ai-chat-application-1113-main-frontend-1:4173;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # 添加调试头
			add_header X-Debug-Message "Proxying to 4173" always;
		}

		location /api {
			# proxy_pass http://payment:4242;
			proxy_pass http://127.0.0.1:4242;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-Proto $scheme;
		}
	}
	
	# stripe-pay 服务器配置
	server {
		listen 80;
		server_name stripe-pay.saga4v.com;
		
		access_log /var/log/nginx/stripe-pay.access.log;
		error_log /var/log/nginx/stripe-pay.error.log debug;

		location / {
			proxy_pass http://127.0.0.1:4242;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			
			# 添加调试头
			add_header X-Debug-Message "Proxying to 4242" always;
		}
	}
	
	# kitty_game 服务器配置
	server {
		listen 80;
		server_name kitty.saga4v.com;
		
		access_log /var/log/nginx/kitty.access.log;
		error_log /var/log/nginx/kitty.error.log debug;

		location / {
			proxy_pass http://127.0.0.1:42891;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			
			# 添加调试头
			add_header X-Debug-Message "Proxying to 42891" always;
		}
	}

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name love.saga4v.com play.saga4v.com;
        return 301 https://$host$request_uri;
    }


# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl;
#        listen       [::]:443 ssl;
#        http2        on;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers PROFILE=SYSTEM;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        error_page 404 /404.html;
#        location = /404.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#        location = /50x.html {
#        }
#    }
}
